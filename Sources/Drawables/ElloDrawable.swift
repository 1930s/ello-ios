//
//  ElloDrawable.swift
//  Ello
//
//  Created by Colin T.A. Gray on 3/17/15.
//  Copyright (c) 2015 Ello. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class ElloDrawable : NSObject {

    //// Cache

    private struct Cache {
        static var white: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        static var greyA: UIColor = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1.000)
        static var imageOfUndoIcon: UIImage?
        static var undoIconTargets: [AnyObject]?
        static var imageOfUndoIconSelected: UIImage?
        static var undoIconSelectedTargets: [AnyObject]?
    }

    //// Colors

    public class var white: UIColor { return Cache.white }
    public class var greyA: UIColor { return Cache.greyA }

    //// Drawing Methods

    public class func drawUndoIconTemplate(#color: UIColor) {

        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(0.5, 10.5))
        bezierPath.addLineToPoint(CGPointMake(9.5, 10.5))
        bezierPath.addCurveToPoint(CGPointMake(12.5, 7), controlPoint1: CGPointMake(9.5, 10.5), controlPoint2: CGPointMake(12.5, 10.5))
        bezierPath.addCurveToPoint(CGPointMake(9.5, 3.5), controlPoint1: CGPointMake(12.5, 3.5), controlPoint2: CGPointMake(9.5, 3.5))
        bezierPath.addLineToPoint(CGPointMake(0.5, 3.5))
        color.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()


        //// Bezier 2 Drawing
        var bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(3, 6))
        bezier2Path.addCurveToPoint(CGPointMake(0.5, 3.5), controlPoint1: CGPointMake(0.5, 3.5), controlPoint2: CGPointMake(0.5, 3.5))
        color.setStroke()
        bezier2Path.lineWidth = 1
        bezier2Path.stroke()


        //// Bezier 3 Drawing
        var bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(0.5, 3.5))
        bezier3Path.addCurveToPoint(CGPointMake(3, 1), controlPoint1: CGPointMake(3, 1), controlPoint2: CGPointMake(3, 1))
        color.setStroke()
        bezier3Path.lineWidth = 1
        bezier3Path.stroke()
    }

    public class func drawUndoIcon() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Symbol Drawing
        let symbolRect = CGRectMake(0, 0, 14, 14)
        CGContextSaveGState(context)
        UIRectClip(symbolRect)
        CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y)

        ElloDrawable.drawUndoIconTemplate(color: ElloDrawable.greyA)
        CGContextRestoreGState(context)
    }

    public class func drawUndoIconSelected() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Symbol Drawing
        let symbolRect = CGRectMake(0, 0, 14, 14)
        CGContextSaveGState(context)
        UIRectClip(symbolRect)
        CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y)

        ElloDrawable.drawUndoIconTemplate(color: ElloDrawable.white)
        CGContextRestoreGState(context)
    }

    public class var imageOfUndoIcon: UIImage {
        if Cache.imageOfUndoIcon != nil {
            return Cache.imageOfUndoIcon!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(14, 14), false, 0)
            ElloDrawable.drawUndoIcon()

        Cache.imageOfUndoIcon = UIGraphicsGetImageFromCurrentImageContext()!.resizableImageWithCapInsets(UIEdgeInsetsMake(7, 4, 6, 5), resizingMode: UIImageResizingMode.Tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfUndoIcon!
    }

    public class var imageOfUndoIconSelected: UIImage {
        if Cache.imageOfUndoIconSelected != nil {
            return Cache.imageOfUndoIconSelected!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(14, 14), false, 0)
            ElloDrawable.drawUndoIconSelected()

        Cache.imageOfUndoIconSelected = UIGraphicsGetImageFromCurrentImageContext()!.resizableImageWithCapInsets(UIEdgeInsetsMake(7, 4, 6, 5), resizingMode: UIImageResizingMode.Tile)
        UIGraphicsEndImageContext()

        return Cache.imageOfUndoIconSelected!
    }

    @IBOutlet var undoIconTargets: [AnyObject]! {
        get { return Cache.undoIconTargets }
        set {
            Cache.undoIconTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(ElloDrawable.imageOfUndoIcon)
            }
        }
    }

    @IBOutlet var undoIconSelectedTargets: [AnyObject]! {
        get { return Cache.undoIconSelectedTargets }
        set {
            Cache.undoIconSelectedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(ElloDrawable.imageOfUndoIconSelected)
            }
        }
    }
}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
